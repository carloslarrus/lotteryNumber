{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","yourNumber","setYourNumber","serial","setSerial","random","setRandom","numberReady","setNumberReady","winner","setWinner","serialWinning","setSerialWinning","randomWinning","setRandomWinning","message","setMessage","buyMessage","setBuyMessage","randomsBuy","className","onClick","length","console","log","i","randomNumber","Math","floor","prvState","push","randomSerial","randomsWinning","buyNumber","concat","JSON","stringify","map","number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e8e105e.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState} from 'react'\n\nfunction App() {\n\n  // useStates\n  // for the buy lottery number\n  const [yourNumber, setYourNumber] =useState('')\n  const [serial, setSerial] = useState([])\n  const [random, setRandom] = useState([])\n  const [numberReady, setNumberReady] = useState(null)\n\n  // for the winning number\n  const [winner, setWinner] =useState('')\n  const [serialWinning, setSerialWinning] = useState([])\n  const [randomWinning, setRandomWinning] = useState([])\n  const [message, setMessage] = useState('')\n  const [buyMessage, setBuyMessage] = useState('')\n\n  // functions\n\n  // buy Number\n  let randomsBuy = []\n  \n  function lottoNumber (){ \n     setNumberReady(1)\n     setYourNumber('Your number is the following :')\n\n    if(random.length > 1){\n      console.log('There is already a lottery number');\n    } else{\n      for(let i =0; i < 5 ; i++){\n        let randomNumber = Math.floor(Math.random()*99)\n        setRandom((prvState) => [...prvState, randomNumber]) \n        randomsBuy.push(randomNumber)\n      }\n      let randomSerial = Math.floor(Math.random()*9)\n      setSerial((prvState) => [...prvState, randomSerial] )\n      randomsBuy.push(randomSerial)\n    }\n    \n  }\n\n  // winning Number\n  function winning (){\n    if(numberReady){\n      let randomsWinning=[]\n    console.log(`randomsBuy.length : `, randomsBuy.length);\n      if(randomsBuy.length == 0) {\n       setBuyMessage('First, you have to buy a lottery number.')  \n    }\n    if(randomWinning.length > 1){\n      console.log('There is already a winning number');\n      setBuyMessage('')\n    }  \n     else {\n      \n       let buyNumber = random.concat(serial)\n      for(let i =0; i < 5 ; i++){\n        let randomNumber = Math.floor(Math.random()*99)\n        setRandomWinning((prvState) => [...prvState, randomNumber]) \n        randomsWinning.push(randomNumber)\n        \n      }\n      let randomSerial = Math.floor(Math.random()*9)\n      setSerialWinning((prvState) => [...prvState, randomSerial] )\n      randomsWinning.push(randomSerial)\n         \n      let winningMessage = `You won the lottery`\n      let losingMessage = `Your number is not awarded. Next time, you will have more luck!!`\n      if(JSON.stringify(randomsWinning) == JSON.stringify(buyNumber)){\n        console.log('winning', randomsWinning);\n        console.log('buyNumber',buyNumber);\n        console.log(JSON.stringify(randomsWinning) == JSON.stringify(buyNumber));\n        \n        setWinner('The winner number is :')\n        setMessage(winningMessage)\n        setBuyMessage('')\n      } else {\n        setWinner('The winner number is :')\n        console.log('winning', randomsWinning);\n        console.log('buyNumber',buyNumber);\n        setMessage(losingMessage)\n        setBuyMessage('')\n        console.log(JSON.stringify(randomsWinning) == JSON.stringify(buyNumber));\n      }\n    }\n\n    } else{\n      setBuyMessage('First, you have to buy a lottery number.') \n    }\n     \n    \n  }\n\n  // resetNumber\n  function reset (){\n    setSerial(() => [])\n    setRandom(() => [])\n    setSerialWinning(() => [])\n    setRandomWinning(() => [])\n    setYourNumber(() => '')\n    setMessage(() => '')\n    setWinner(() =>'')\n    setBuyMessage(() => '')\n    setNumberReady(null)\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>Lottery Number</h2>\n     \n        <div className=\"buttons\">\n      <div className='button' onClick ={lottoNumber}>Buy</div>\n      <div className=\"button\" onClick ={reset}>Reset</div>\n      <div className=\"button\" onClick ={winning}>Winning</div>\n      </div>\n\n      {/* beginning bought lottery number */}\n      <div className='titleNumber'>\n      {yourNumber}\n      </div>\n      \n      <div className=\"number\"> \n      {random.map( number => {\n        return <div className='display'>{number}</div>\n      })}\n      {serial.map( number => {\n        return <div className='serial'>{number}</div>\n      })}\n      </div>\n       \n      <div className=\"titleNumber\">\n        {winner}\n      </div>\n      <div className=\"number\">\n      {randomWinning.map( number => {\n        return <div className='display'>{number}</div>\n      })}\n      {serialWinning.map( number => {\n        return <div className='serial'>{number}</div>\n      })}\n      </div>\n      <div>\n        {message}\n        {buyMessage}\n      </div>\n\n    </div>\n  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}